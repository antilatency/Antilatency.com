using Csml;


partial class Hardware : Scope {

    public static Material ExtensionBoard_ru =>

        new Material(
            "Antilatency Extension Board",
            ExtensionBoard_Assets.TitleImage,
        $"Плата для подключения к {Hardware.HMD_Radio_Socket} внешних компонентов, например, кнопок или LED. С её помощью можно как считывать внешние триггеры, так и управлять внешними устройствами, например, настроить виброотклик.")

        [$"Используя Extension Board, вы можете создавать сложные по структуре устройства на основе HMD Radio Socket."] 
        [$"Мы в Antilatency разработали демонстрационную модель огнетушителя. Её корпус в точности повторяет размеры настоящего огнетушителя. Нажмите на рычаг устройства в реальном мире - оно заработает в виртуальном. Потрясающее сочетание тактильного и визуального восприятия."]
        [$"Практически любой предмет, существующий в реальности, можно таким образом перенести в мир VR."]

        [ExtensionBoard_Assets.Video.GetPlayer()]

        [new Info($"Плата расширения работает через {Terms.Antilatency_Hardware_Extension_Interface} с помощью {Software.Antilatency_Hardware_Extension_Interface_Library}.")]

        [new Section("Pinout","")
            [$"Для подключения доступно 8 пинов. Максимальное напряжение на всех пинах, включая аналоговые, - не более 3В. \nКаждый пин может быть в режиме входа(Input) или выхода(Output). Любые 2 пина могут находиться в режиме подсчёта импульсов. Любые 4 могут быть в режиме ШИМ выхода. И только 2 определённых пина могут работать в аналоговом режиме."]
            [Hardware.ExtensionBoard_Assets.PinFunctions]
            [new Warning()[$"IOA_3 и IOA_4 - низкоскоростные пины. Частота сигнала не должна превышать 10кГц."]]

            [$"*Input* \nРежим входа с внутренним Pull-Up(≈13 кОм). \nКаждые 5мс запрашивается состояние пина. Если оно изменилось, данные отправляются на хост."]

           /*[$"Типичная схема подключение кнопки: "]
            [Input]*/

            [$"*Output* \nРежим выхода Push-Pull. \nТок, потребляемый с пина, не должен превышать 4мA."]

           /* [$"Типичная схема подключения светодиода:"]
            [ExtensionBoard_Assets.Output]
            [$"Если нужно управлять более мощной нагрузкой, используйте такую схему: "]
            [ExtensionBoard_Assets.HighLoadOutput]*/

            [$"*PulseCounter* \nПлавающий режим входа, через который можно подключать другие микросхемы, например, схему ёмкостного датчика. В этом режиме подсчитывается количество положительных фронтов сигнала."]

            [$"*PWN* \nРежим выхода ШИМ сигнала (Push-Pull) заданной частоты и скважности. \nМожет использоваться для подключения других микросхем или как аналоговый выход с помощью RC фильтра. С его помощью можно управлять яркостью светодиода, интенсивностью вибрации и т.д."]

            [$"*Analog* \nАналоговый режим с разрешением 10 бит."]

            /*[$"Типичная схема подключения потенциометра:"]
            [ExtensionBoard_Assets.Analog]
            [new Info()[$"Резистор R3 обеспечивает ограничение напряжения на пине IOA. Напряжение должно быть в диапазоне 0-3 В."]]*/
        
            ]

        
            ;
}